const opCodes={add:"000000",addi:"001000",addiu:"001001",addu:"000000",and:"000000",andi:"001100",lui:"001111",nor:"000000",or:"000000",ori:"001101",slt:"000000",slti:"001010",sltiu:"001011",sltu:"000000",sub:"000000",subu:"000000",xor:"000000",xori:"001110",sll:"000000",sllv:"000000",sra:"000000",srav:"000000",srl:"000000",srlv:"000000",div:"000000",divu:"000000",mfhi:"000000",mflo:"000000",mthi:"000000",mtlo:"000000",mult:"000000",multu:"000000",beq:"000100",bgez:"000001",bgezal:"000001",bgtz:"000111",blez:"000110",bltz:"000001",bltzal:"000001",bne:"000101",j:"000010",jal:"000011",jalr:"000000",jr:"000000",mfc0:"010000",mtc0:"010000",lb:"100000",lbu:"100100",lh:"100001",lw:"100011",sb:"101000",sh:"101001",sw:"101011"},functionBits={add:"100000",sub:"100010",and:"100100",or:"100101",slt:"101010",jr:"001000"};class Organizer{constructor(){this.instructionCode="",this.instruction="add",this.regValues=Array(31).fill("0"),this.memValues=[],this.pcValues={},this.currAddress="00000000000000000000000101011000"}setICode(a){this.instructionCode=a}getICode(){return this.instructionCode}setInstruction(a){return this.instruction=a,this.instruction}getInstruction(){return this.instruction}getRegValues(){return this.regValues}setRegValues(a){this.regValues=a}getMemValue(a){return this.memValues[a]||(this.updateMemValue(a,0),updateMemories()),this.memValues[a]}updateMemValue(a,b){this.memValues[a]=b}getMemValues(){return this.memValues}getPcValue(a){return this.pcValues[a]}updatePcValues(a){this.pcValues[this.currAddress]=a}getCurrAddress(){return this.currAddress}setCurrAddress(a){return this.currAddress=a,this.currAddress}}const regInput1=[...document.querySelectorAll(".reg-input-1")],regInput2=[...document.querySelectorAll(".reg-input-2")],input3Label=document.getElementById("input3-label"),regSelects=document.querySelectorAll(".reg-select"),regInputContainer=document.getElementById("reg-input-container"),memContainer=document.getElementById("mem-container"),container=document.getElementById("container"),regForm=document.getElementById("reg-form"),instFormInputs=document.querySelectorAll(".inst-form-input"),instructionCodeContainer=document.getElementById("instruction-code"),organizer=new Organizer;function startCycle(a){organizer.updatePcValues(a),goOneCycle()}function goOneCycle(){for(let a=0;a<nodes.length;a++)nodes[a].setDontCare(!1);for(let a=0;a<components.length;a++)components[a].update(),components[a].updateWires(),components[a].isVisited=!0;register.update(!0);for(let a=components.length-1;0<=a;a--)components[a].updateDontCare()}function setSelectOptions(){regSelects.forEach(a=>{for(let b,c=1;32>c;c++)b=document.createElement("option"),b.value="$"+c,b.innerHTML="$"+c,a.append(b)})}function setRegInputs(){for(let a,b=1;32>b;b++){a=document.createElement("div"),a.classList.add("border-2");let c=document.createElement("p");c.classList.add("text-center"),c.innerText="$"+b;let d=document.createElement("div");d.classList.add("text-center");let e=document.createElement("input");e.setAttribute("type","text"),e.setAttribute("placeholder",".."),e.setAttribute("size","2"),e.setAttribute("maxlength","2"),e.setAttribute("name","reg-"+b),e.setAttribute("value",0),e.classList.add("text-center","border-2","rounded","mb-1"),d.append(e),a.append(c),a.append(d),regInputContainer.append(a)}}function setInstruction(a){organizer.setInstruction(a.target.value),setInputs()}function resetInputs(){[...regInput1,...regInput2].map(a=>a.classList.add("hidden")),input3Label.innerText="Immediate"}function showInput(a){a.map(a=>{regInput1[a].classList.remove("hidden")})}function showSecondInput(a){regInput1[a].classList.add("hidden"),regInput2[a].classList.remove("hidden")}function updateIC(){instructionCodeContainer.innerText=organizer.getICode()}function setInputs(){resetInputs();let a=organizer.getInstruction();"Jr"==a?showInput([0]):["J","Jal"].includes(a)?(showInput[0],showSecondInput(0)):"Addi"==a?(showInput([0,1,2]),showSecondInput(2)):["Lw","Sw"].includes(a)?(showInput([0,1,2]),showSecondInput(1)):"Beq"==a?(showInput([0,1,2]),showSecondInput(2),input3Label.innerText="Target"):showInput([0,1,2])}function go(a){a.preventDefault();let b=[];instFormInputs.forEach(a=>{a.parentElement.classList.contains("hidden")||b.push(a.value)});let c,d=organizer.setInstruction(b[0]).toLowerCase(),e=opCodes[d],f=[e],g=6;const h="000000"===e?"R":"000010"===e||"000011"===e?"J":"I";for(let d=1;d<b.length;d++){const a=b[d].split("$");2==a.length?(f.push(dectoBin(a[1],5)),g+=5):c=a[0]}if("000100"!=e&&"000010"!=e&&"000011"!=e&&f.push(f.splice(1,1)[0]),"R"==h){let a=functionBits[d];f.push(dectoBin(0,5)),f.push(a),"001000"==a&&(f.splice(3,0,dectoBin(0,5)),f.splice(3,0,dectoBin(0,5)),g+=10),g+=5+a.length}c&&f.push(dectoBin(c,32-g)),organizer.setICode(f.join(" ")),updateIC(),startCycle(organizer.getICode())}function dectoBin(a,b){let c=(+a>>>0).toString(2);for(;c.length<b;)c="0"+c;return c}function binToDec(a){return parseInt(a,2)}function binToHex(a){let b=parseInt(a,2).toString(16).toUpperCase();for(;8>b.length;)b="0"+b;return"0x"+b}function toggleForm(){"true"==container.getAttribute("isExpanded")?(container.style.maxHeight="0px",container.setAttribute("isExpanded","false")):(container.style.maxHeight="500px",container.setAttribute("isExpanded","true"))}function setRegisters(a){a.preventDefault();const b=new FormData(regForm);organizer.setRegValues([...b.values()])}function updateRegisters(a){let b=regInputContainer.children;for(let c=0;c<a.length;c++)b[c+1].children[1].querySelector("input").value=a[c];organizer.setRegValues(a)}function updateMemories(){let a=document.createElement("div"),b=organizer.getMemValues();for(const[c,d]of Object.entries(b)){let b=document.createElement("div");b.classList.add("flex");let e=document.createElement("div");e.classList.add("border-2","border-gray-500","border-r-0","p-3"),e.innerText=c;let f=document.createElement("div");f.classList.add("border-2","border-gray-500","p-3"),f.innerText=d,b.append(e,f),a.append(b)}memContainer.innerHTML=a.innerHTML}function openPopups(){for(let a=0;a<nodes.length;a++)nodes[a].openPopup()}function closePopups(){for(let a=0;a<nodes.length;a++)nodes[a].closePopup()}function gradientLine(a,b,c,d,e,f){var g=this.drawingContext.createLinearGradient(a,b,c,d);g.addColorStop(0,e),g.addColorStop(1,f),this.drawingContext.strokeStyle=g}function findWiresByEndNode(a){return wires.find(b=>b.endNode==a)}var cnv,pc,register,components=[],wires=[],points=[],nodes=[];function init(){setSelectOptions(),setRegInputs();let a=25,b=color(5,176,239);pc=new Pc(50,a+350);let c=new Alu(140,a+50,!0,"00100"),d=new Alu(715,a+90,!0),e=new Alu(650,a+325,!1),f=new InstructionMemory(150,a+350);register=new Registers(400,a+350);let g=new DataMemory(825,a+400),h=new Mux(325,a+410),i=new Mux(580,a+400,!1),j=new Mux(975,a+300,!0),k=new Mux(980,a+6.5,!0),l=new Mux(880,a+50),m=new Mux(1060,a+80,!1,!0),n=new Ellipse(450,a+525,"Sign\nExtend",66),o=new Ellipse(580,a+580,"Alu\nControl",66,!0),p=new Ellipse(600,a+195,"Shift\nLeft 2",66),q=new Ellipse(400,a,"Shift\nLeft 2",66),r=new Ellipse(540,a+18,"",30,!0),s=new Control(340,a+125,"C\nO\nN\nT\nR\nO\nL"),t=new AndGate(800,a+290),u=new Node(f.output.x+25,register.inputs[1].y),v=new Node(register.inputs[3].x-25,j.output.y+350),w=new Node(n.input.x-50,n.input.y),x=new Node(n.input.x-50,n.input.y),y=new Node(pc.input.x-25,pc.input.y-435),z=new Node(s.outputs[1].x-125,s.outputs[1].y-50),A=new Node(h.additionalInput.x,h.additionalInput.y+25),B=new Node(s.outputs[2].x+220,s.outputs[2].y),C=new Node(k.additionalInput.x,k.additionalInput.y-25),D=new Node(j.additionalInput.x,j.additionalInput.y-66),E=new Node(o.additionalInput.x,o.additionalInput.y+50),F=new Node(e.additionalInput.x,o.output.y),G=new Node(m.additionalInput.x,o.output.y),H=new Node(e.outputs[1].x+40,e.outputs[1].y),I=new Node(g.additionalInputs[0].x,s.outputs[7].y),J=new Node(i.additionalInput.x-40,s.outputs[8].y),K=new Node(i.additionalInput.x,i.additionalInput.y+15),L=new Node(register.additionalInput.x,s.outputs[9].y),M=new Node(g.additionalInputs[1].x+175,s.outputs[4].y),N=new Node(g.additionalInputs[1].x,g.additionalInputs[1].y+25),O=new Node(s.outputs[3].x+265,s.outputs[3].y),P=new Node(c.outputs[0].x+50,c.outputs[0].y),Q=new Node(d.inputs[0].x-65,l.inputs[0].y),R=new Node(r.additionalInput.x,l.inputs[0].y),S=new Node(register.outputs[1].x+20,register.outputs[1].y),T=new Node(l.additionalInput.x,t.output.y),U=new Node(e.inputs[0].x-50,e.inputs[0].y),V=new Node(t.output.x+80,t.output.y-35);components.push(pc,c,f,q,s,h,n,register,i,o,e,p,d,r,g,t,j,l,k,m);let W=new Wire({startNode:pc.output,endNode:f.input}),X=new Wire({startNode:pc.output,endNode:c.inputs[0]});pc.output.setWires([W,X]);let Y=new Wire({isManuel:!0,startNode:f.output,endNode:q.input}),Z=new Wire({isManuel:!0,startNode:f.output,endNode:s.input}),$=new Wire({isManuel:!0,startNode:f.output,endNode:register.inputs[0]}),_=new Wire({isManuel:!0,startNode:f.output,endNode:u}),aa=new Wire({isManuel:!0,startNode:f.output,endNode:h.inputs[1]}),ba=new Wire({isManuel:!0,startNode:f.output,endNode:w}),ca=new Wire({isManuel:!0,startNode:f.output,endNode:x}),da=new Wire({startNode:u,endNode:register.inputs[1]}),ea=new Wire({startNode:u,endNode:h.inputs[0]}),fa=new Wire({startNode:w,endNode:n.input}),ga=new Wire({startNode:x,endNode:o.input});f.output.setWires([Y,Z,$,_,aa,ba,ca,da,ea,fa,ga]);let ha=new Wire({isManuel:!0,startNode:c.outputs[0],endNode:P}),ia=new Wire({startNode:P,endNode:Q}),ja=new Wire({startNode:Q,endNode:d.inputs[0],backwards:!0}),ka=new Wire({startNode:Q,endNode:l.inputs[0],backwards:!0}),la=new Wire({isManuel:!0,startNode:P,endNode:R}),ma=new Wire({startNode:R,endNode:r.additionalInput,backwards:!0});c.outputs[0].setWires([ha,la,ia,ja,ka,ma]);let na=new Wire({startNode:h.output,endNode:register.inputs[2]});h.output.setWires([na]);let oa=new Wire({startNode:n.output,endNode:p.input}),pa=new Wire({startNode:n.output,endNode:i.inputs[1]});n.output.setWires([oa,pa]);let qa=new Wire({startNode:register.outputs[0],endNode:U}),ra=new Wire({startNode:U,endNode:e.inputs[0]}),sa=new Wire({startNode:U,endNode:V,backwards:!0}),ta=new Wire({startNode:V,endNode:m.inputs[1],backwards:!0}),ua=new Wire({startNode:register.outputs[1],endNode:S}),va=new Wire({startNode:S,endNode:i.inputs[0],backwards:!0}),wa=new Wire({startNode:S,endNode:g.inputs[1],backwards:!0});register.outputs[0].setWires([qa,ra,sa,ta]),register.outputs[1].setWires([ua,va,wa]);let xa=new Wire({startNode:i.output,endNode:e.inputs[1]});i.output.setWires([xa]);let ya=new Wire({startNode:e.outputs[0],endNode:t.inputs[1]}),za=new Wire({startNode:e.outputs[1],endNode:H}),Aa=new Wire({startNode:H,endNode:g.inputs[0],backwards:!0}),Ba=new Wire({startNode:H,endNode:j.inputs[1],backwards:!0});e.outputs[0].setWires([ya]),e.outputs[1].setWires([za,Aa,Ba]);let Ca=new Wire({startNode:g.output,endNode:j.inputs[0]});g.output.setWires([Ca]);let Da=new Wire({startNode:j.output,endNode:v}),Ea=new Wire({startNode:v,endNode:register.inputs[3],backwards:!0});j.output.setWires([Da,Ea]);let Fa=new Wire({startNode:p.output,endNode:d.inputs[1]});p.output.setWires([Fa]);let Ga=new Wire({startNode:r.output,endNode:k.inputs[0]});r.output.setWires([Ga]);let Ha=new Wire({startNode:q.output,endNode:r.input,backwards:!0});q.output.setWires([Ha]);let Ia=new Wire({startNode:d.outputs[0],endNode:l.inputs[1]});d.outputs[0].setWires([Ia]);let Ja=new Wire({startNode:k.output,endNode:m.inputs[0]});k.output.setWires([Ja]);let Ka=new Wire({startNode:s.outputs[1],endNode:z,wireColor:b,text:"RegDest",textXOffset:30,textYOffset:-5}),La=new Wire({startNode:z,endNode:A,backwards:!0,wireColor:b}),Ma=new Wire({startNode:A,endNode:h.additionalInput,backwards:!0,wireColor:b}),Na=new Wire({startNode:s.outputs[2],endNode:B,wireColor:b,text:"Jump",textXOffset:35,textYOffset:2}),Oa=new Wire({startNode:B,endNode:C,backwards:!0,wireColor:b}),Pa=new Wire({startNode:C,endNode:k.additionalInput,backwards:!0,wireColor:b}),Qa=new Wire({startNode:s.outputs[4],endNode:M,wireColor:b,text:"MemRead",textXOffset:35,textYOffset:2}),Ra=new Wire({startNode:M,endNode:N,backwards:!0,wireColor:b}),Sa=new Wire({startNode:N,endNode:g.additionalInputs[1],backwards:!0,wireColor:b}),Ta=new Wire({startNode:s.outputs[5],endNode:D,wireColor:b,text:"MemToReg",textXOffset:35,textYOffset:2}),Ua=new Wire({startNode:D,endNode:j.additionalInput,backwards:!0,wireColor:b}),Va=new Wire({startNode:s.outputs[6],endNode:E,wireColor:b,text:"ALUOp",textXOffset:15}),Wa=new Wire({startNode:E,endNode:o.additionalInput,backwards:!0,wireColor:b}),Xa=new Wire({startNode:s.outputs[7],endNode:I,wireColor:b,text:"MemWrite",textXOffset:40,textYOffset:2}),Ya=new Wire({startNode:I,endNode:g.additionalInputs[0],backwards:!0,wireColor:b}),Za=new Wire({startNode:s.outputs[8],endNode:J,wireColor:b,text:"ALUSrc",textXOffset:50,textYOffset:2}),$a=new Wire({startNode:J,endNode:K,backwards:!0,wireColor:b}),_a=new Wire({startNode:K,endNode:i.additionalInput,backwards:!0,wireColor:b}),ab=new Wire({startNode:s.outputs[9],endNode:L,backwards:!0,wireColor:b,text:"RegWrite",textXOffset:65,textYOffset:20}),bb=new Wire({startNode:L,endNode:register.additionalInput,backwards:!0,wireColor:b}),cb=new Wire({startNode:s.outputs[3],endNode:O,wireColor:b,text:"Branch",textXOffset:35,textYOffset:2}),db=new Wire({startNode:O,endNode:t.inputs[0],wireColor:b});s.outputs[0].setWires([Ka,La,Ma]),s.outputs[1].setWires([Na,Oa,Pa]),s.outputs[3].setWires([cb,db]),s.outputs[4].setWires([Qa,Ra,Sa]),s.outputs[5].setWires([Ta,Ua]),s.outputs[6].setWires([Va,Wa]),s.outputs[7].setWires([Xa,Ya]),s.outputs[8].setWires([Za,$a,_a]),s.outputs[9].setWires([ab,bb]);let eb=new Wire({startNode:o.output,endNode:G,wireColor:b,isManuel:!0,isGradient:!0}),fb=new Wire({startNode:o.output,endNode:F}),gb=new Wire({startNode:G,endNode:m.additionalInput,backwards:!0,wireColor:b,text:"JumpReg"}),hb=new Wire({startNode:F,endNode:e.additionalInput,backwards:!0});o.output.setWires([eb,fb,hb,gb]);let ib=new Wire({startNode:t.output,endNode:T}),jb=new Wire({startNode:T,endNode:l.additionalInput,backwards:!0});t.output.setWires([ib,jb]);let kb=new Wire({startNode:l.output,endNode:k.inputs[1]});l.output.setWires([kb]);let lb=new Wire({startNode:m.output,endNode:y}),mb=new Wire({startNode:y,endNode:pc.input,backwards:!0});m.output.setWires([lb,mb]),wires=[],components.forEach(a=>{componentWires=a?.output?a.output.wires:a.outputs.reduce(function(c,a){return c.concat(a.wires)},[]),a.setWires(componentWires),wires=[...wires,...componentWires]}),points.push(new Point(125,a+425),new Point(300,a+400),new Point(540,a+453),new Point(520,a+450),new Point(790,a+425),new Point(425,a+558),new Point(650,a+76),new Point(0+554.5,a+75),new Point(600,a+355),new Point(e.additionalInput.x,o.output.y))}function setup(){cnv=createCanvas(1200,750),cnv.parent(select("#canvas-container")),init()}function draw(){background(255),noFill();for(let a=0;a<wires.length;a++)wires[a].draw();fill(255);for(let a=0;a<components.length;a++)components[a].draw();for(let a=0;a<points.length;a++)points[a].draw();for(let a=0;a<nodes.length;a++)nodes[a].draw()}function mousePressed(){for(let a=0;a<nodes.length;a++)nodes[a].onClick()}class Node{constructor(a,b,c=!1){this.x=a,this.y=b,this.value=c,this.colorValue=color(255,0,0),this.isPopupOpen=!1,this.rollover=!1,this.hasValue=!1,this.isDontCare=!1,this.wires=[],this.changeValue(c)}setDontCare(a){if(this.isDontCare=a,this.isDontCare){this.wires?.forEach(a=>{if(!a.endNode.isDontCare)return void this.setDontCare(!1)});let a=findWiresByEndNode(this);a?.startNode.setDontCare(!0)}this.changeValue(this.value)}changeValue(a){this.value=a,this.hasValue=!1!==a&&!0!==a,this.colorValue=this.isDontCare?color(0,255,255):this.hasValue?color(0,0,255):this.value?color(0,255,0):color(255,0,0)}setWires(a){this.wires=a}showValue(){fill(0),noStroke(),textSize(15),text(this.value,this.x-15,this.y),fill(255),stroke(0),strokeWeight(2)}dist(){return(this.x-mouseX)**2+(this.y-mouseY)**2}update(){let a=this.dist();this.rollover=40>a&&0<a}onClick(){this.rollover&&(this.isPopupOpen=!this.isPopupOpen,this.rollover=!1)}openPopup(){this.isPopupOpen=!0}closePopup(){this.isPopupOpen=!1}showPopup(){let a=6<this.value.length?binToHex(this.value):this.value,b=10*a.length+50;fill(255),rect(this.x-b/2,this.y-50,b,40,20),fill(0),noStroke(),textSize(15),text(a,this.x-b/2+25,this.y-25),fill(255),stroke(0),strokeWeight(2),noFill()}show(){fill(this.colorValue),ellipse(this.x,this.y,14),noFill(),this.hasValue&&(this.isPopupOpen||this.rollover)&&this.showPopup()}draw(){this.show(),this.update()}}class Point{constructor(a,b,c=10){this.x=a,this.y=b,this.r=c}draw(){fill(0),ellipse(this.x,this.y,this.r),noFill()}}class Wire{constructor({startNode:a,endNode:b,backwards:c=!1,wireColor:d=0,text:e="",textXOffset:f=0,textYOffset:g=0,isManuel:h=!1,isGradient:i=!1}){this.startNode=a,this.endNode=b,this.backwards=c,this.wireColor=d,this.text=e,this.textXOffset=f,this.textYOffset=g,this.isManuel=h,this.isGradient=i}update(){this.isManuel||this.endNode.changeValue(this.startNode.value)}drawText(){fill(this.wireColor),textSize(13),text(this.text,this.startNode.x+this.textXOffset,this.startNode.y+this.textYOffset),noFill(),stroke(0),strokeWeight(2)}draw(){this.isGradient?gradientLine(this.startNode.x,this.startNode.y,this.endNode.x,this.endNode.y,color(0),this.wireColor):stroke(this.wireColor),beginShape(),vertex(this.startNode.x,this.startNode.y),vertex(this.startNode.x+(this.backwards?0:25),this.startNode.y),vertex(this.startNode.x+(this.backwards?0:25),this.endNode.y),vertex(this.endNode.x,this.endNode.y),endShape(),stroke(0),this.drawText()}}class Component{constructor(a,b,c,d,e,f,g){this.x=a,this.y=b,this.width=c,this.height=d,this.text=e,this.textXOffset=f,this.textYOffset=g,this.isVisited=!1,this.wires=[]}setWires(a){this.wires=a}updateDontCare(){}updateWires(){for(let a=0;a<this.wires.length;a++)this.wires[a].update()}drawText(){fill(0),noStroke(),textSize(15),text(this.text,this.x+this.width/this.textXOffset,this.y+this.height/this.textYOffset),fill(255),stroke(0),strokeWeight(2)}draw(){this.show(),this.drawText(),this.isVisited&&text("OK",this.x+this.width/this.textXOffset,this.y+this.height/this.textYOffset)}}class Pc extends Component{constructor(a,b){super(a,b,50,150,"PC",3,2),this.input,this.output,this.generateIO()}generateIO(){this.input=new Node(this.x,this.y+this.height/2,"00000000000000000000000101011000"),this.output=new Node(this.x+this.width,this.y+this.height/2,!1),nodes.push(this.input,this.output)}update(){this.output.changeValue(organizer.setCurrAddress(this.input.value))}show(){rect(this.x,this.y,this.width,this.height)}}class Alu extends Component{constructor(a,b,c,d=!1){super(a,b,100,150,c?"Add":"Alu",2.5,2),this.isAdd=c,this.wires=[],this.inputs=[],this.outputs=[],this.additionalInput,this.defaultValue=d,this.generateIO()}generateIO(){this.isAdd||(this.additionalInput=new Node(this.x+this.width/2,this.y+this.height/1.1),this.outputs.push(new Node(this.x+this.width,this.y+this.height/3,!1)),nodes.push(this.additionalInput)),this.outputs.push(new Node(this.x+this.width,this.y+this.height/(this.isAdd?2:1.5),!1)),this.inputs.push(new Node(this.x,this.y+30,!1)),this.inputs.push(new Node(this.x,this.y+120,this.defaultValue)),nodes=nodes.concat(this.outputs).concat(this.inputs)}updateDontCare(){let a=this.outputs[0].isDontCare&&(!this.outputs[1]||this.outputs[1].isDontCare);this.inputs[0].setDontCare(a),this.inputs[1].setDontCare(a),this.additionalInput?.setDontCare(a)}update(){let a=this.isAdd?"010":this.additionalInput.value.toString(),b=this.inputs[0].value,c=binToDec(b),d=this.inputs[1].value,e=binToDec(d);if(this.isAdd){let a=dectoBin(c+e,32);return this.outputs[0].changeValue(a),void(this.wires[0].isManuel&&(this.wires[0].endNode.changeValue(a)||this.wires[1].endNode.changeValue(a.substring(0,4))))}let f;switch(a){case"010":f=c+e;break;case"110":f=c-e;break;case"000":f=c&e;break;case"001":f=c|e;break;default:}this.outputs[0].changeValue("00000"==f),f=dectoBin(f,12<b.length+d.length?32:5),this.outputs[1].changeValue(f)}show(){beginShape(),vertex(this.x,this.y),vertex(this.x+this.width,this.y+this.height/5),vertex(this.x+this.width,this.y+4*this.height/5),vertex(this.x,this.y+this.height),vertex(this.x,this.y+2*this.height/3),vertex(this.x+this.width/3,this.y+this.height/2),vertex(this.x,this.y+this.height/3),vertex(this.x,this.y),endShape()}}class InstructionMemory extends Component{constructor(a,b){super(a,b,100,150,"Instruction\nMemory",4,1.2),this.input,this.output,this.generateIO(),this.wires=[]}generateIO(){this.input=new Node(this.x,this.y+this.height/2,!1),this.output=new Node(this.x+this.width,this.y+this.height/2,!1),nodes.push(this.input,this.output)}update(){let a=organizer.getPcValue(this.input.value).replaceAll(" ","");this.output.changeValue(a),this.wires[0].endNode.changeValue(a.substring(6)),this.wires[1].endNode.changeValue(a.substring(0,6)),this.wires[2].endNode.changeValue(a.substring(6,11)),this.wires[3].endNode.changeValue(a.substring(11,16)),this.wires[4].endNode.changeValue(a.substring(16,21)),this.wires[5].endNode.changeValue(a.substring(16)),this.wires[6].endNode.changeValue(a.substring(26))}show(){rect(this.x,this.y,this.width,this.height)}}class Registers extends Component{constructor(a,b){super(a,b,100,150,"Registers",4,1.1),this.inputs=[],this.outputs=[],this.additionalInput,this.generateIO()}generateIO(){for(let a=0;4>a;a++)this.inputs.push(new Node(this.x,this.y+20+30*a,!1));for(let a=1;3>a;a++)this.outputs.push(new Node(this.x+this.width,this.y+this.height*a/3,!1));this.additionalInput=new Node(this.x+this.width/2,this.y,!1),nodes.push(this.additionalInput),nodes=nodes.concat(this.inputs).concat(this.outputs)}updateDontCare(){for(let a=0;2>a;a++)this.outputs[a].isDontCare&&this.inputs[a].setDontCare(!0)}update(a=!1){this.inputs[2].setDontCare(!this.additionalInput.value),this.inputs[3].setDontCare(!this.additionalInput.value);let b=organizer.getRegValues();this.outputs[0].changeValue(dectoBin(b[binToDec(this.inputs[0].value)-1],32)),this.outputs[1].changeValue(dectoBin(b[binToDec(this.inputs[1].value)-1],32)),a&&this.additionalInput.value&&(b[binToDec(this.inputs[2].value)-1]=binToDec(this.inputs[3].value).toString(),updateRegisters(b))}show(){rect(this.x,this.y,this.width,this.height)}}class DataMemory extends Component{constructor(a,b){super(a,b,100,150,"Data Memory",15,1.1),this.inputs=[],this.output,this.additionalInputs=[],this.generateIO()}generateIO(){for(let a=1;3>a;a++)this.inputs.push(new Node(this.x,this.y+this.height*a/3,!1));this.output=new Node(this.x+this.width,this.y+this.height/3,!1),this.additionalInputs.push(new Node(this.x+this.width/2,this.y,!1),new Node(this.x+this.width/2,this.y+this.height,!1)),nodes=nodes.concat(this.inputs).concat(this.additionalInputs),nodes.push(this.output)}updateDontCare(){if(this.additionalInputs[0].value)return this.inputs[0].setDontCare(!1),void this.inputs[1].setDontCare(!1);let a=this.output.isDontCare;this.inputs[0].setDontCare(a),this.inputs[1].setDontCare(a)}update(){this.additionalInputs[1].value&&this.output.changeValue(dectoBin(organizer.getMemValue(binToHex(this.inputs[0].value)))),this.additionalInputs[0].value&&(organizer.updateMemValue(binToHex(this.inputs[0].value),binToDec(this.inputs[1].value)),updateMemories())}show(){rect(this.x,this.y,this.width,this.height)}}class Mux extends Component{constructor(a,b,c=!1,d=!1){super(a,b,35,80,"M\nU\nX",3,3),this.inputs=[],this.output,this.additionalInput,this.toTop=c,this.generateIO(),this.updateAddress=d}generateIO(){for(let a=1;3>a;a++)this.inputs.push(new Node(this.x,this.y+this.height*a/3,!1));this.output=new Node(this.x+this.width,this.y+this.height/3,!1),this.additionalInput=new Node(this.x+this.width/2,this.y+(this.toTop?0:this.height),!1),nodes.push(this.additionalInput,this.output),nodes=nodes.concat(this.inputs)}updateDontCare(){this.output.isDontCare&&(this.inputs[0].setDontCare(!0),this.inputs[1].setDontCare(!0),this.additionalInput.setDontCare(!0))}update(){const a=this.additionalInput.value?this.toTop?0:1:this.toTop?1:0;this.output.changeValue(this.inputs[a].value),this.inputs[+!a].setDontCare(!0),this.inputs[+a].setDontCare(!1),this.updateAddress&&organizer.setCurrAddress(this.output.value)}show(){rect(this.x,this.y,this.width,this.height,55)}}class Ellipse extends Component{constructor(a,b,c,d,e=!1){super(a,b,d,d,c,7,2.5),this.input,this.output,this.hasAdditional=e,this.additionalInput,this.generateIO()}generateIO(){this.hasAdditional&&(this.additionalInput=new Node(this.x+this.width/2,this.y+this.height,!1),nodes.push(this.additionalInput)),this.input=new Node(this.x,this.y+this.height/2,!1),this.output=new Node(this.x+this.width,this.y+this.height/2,!1),nodes.push(this.input,this.output)}updateDontCare(){let a=this.output.isDontCare;this.input.setDontCare(a),this.additionalInput?.setDontCare(a)}update(){let a=this.input.value,b=this.additionalInput?.value;if("Shift\nLeft 2"==this.text)a="00"+a,this.output.changeValue(a.slice(2)+a.slice(0,2));else if("Sign\nExtend"==this.text)this.output.changeValue(a=a[0].repeat(32-a.length)+a);else if("Alu\nControl"==this.text){let c="1"==b[0],d="1"==b[1],e="1"==a[5],f="1"==a[4],g="1"==a[3],h="1"==a[2],i=d&&c;this.output.changeValue(""+ +(i^(f&&c||d))+ +(!g||!c||i)+ +((e||h)&&c&&!d)),this.wires[0].endNode.changeValue("001000"==a&&"10"==b)}else this.output.changeValue(b+""+this.input.value)}show(){rect(this.x,this.y,this.width,this.height,50)}}class Control extends Component{constructor(a,b,c){super(a,b,50,200,c,2.5,5),this.input,this.outputs=[],this.generateIO()}generateIO(){this.input=new Node(this.x,this.y+this.height/2,!1);for(let a=1;11>a;a++)this.outputs.push(new Node(this.x+this.width,this.y+this.height*a/11,!1));nodes.push(this.input),nodes=nodes.concat(this.outputs)}update(){let a=this.input.value;this.outputs[0].changeValue("000000"==a),this.outputs[1].changeValue("000000"==a),this.outputs[2].changeValue("000010"==a||"000011"==a),this.outputs[3].changeValue("000100"==a),this.outputs[4].changeValue("100011"==a),this.outputs[5].changeValue("100011"==a),this.outputs[6].changeValue(["000000"].includes(a)?"10":["100011","101011"].includes(a)?"00":"000100"==a?"01":"11"),this.outputs[7].changeValue("101011"==a),this.outputs[8].changeValue("000000"!=a&&"000100"!=a),this.outputs[9].changeValue(!["101011","000010","000100"].includes(a))}drawText(){fill(5,176,239),noStroke(),textSize(15),text(this.text,this.x+this.width/this.textXOffset,this.y+this.height/this.textYOffset),fill(255),stroke(0),strokeWeight(2)}show(){stroke(5,176,239),rect(this.x,this.y,this.width,this.height,50)}}class AndGate extends Component{constructor(a,b){super(a,b,55,55,"And",4.5,1.7),this.x=a,this.y=b,this.inputs=[],this.output,this.generateIO()}generateIO(){this.inputs=[new Node(this.x,this.y+10,!1),new Node(this.x,this.y+35,!1)],this.output=new Node(this.x+this.width,this.y+25,!1),nodes.push(this.inputs[0],this.inputs[1],this.output)}updateDontCare(){return this.output.isDontCare?(this.inputs[0].setDontCare(!0),void this.inputs[1].setDontCare(!0)):this.inputs[0].value?void(!this.inputs[1].value&&this.inputs[0].setDontCare(!0)):void this.inputs[1].setDontCare(!0)}update(){this.output.changeValue(this.inputs[0].value&&this.inputs[1].value)}show(){noFill(),arc(this.x+26,this.y+26,this.width,this.height,radians(-85),radians(85)),beginShape(),vertex(this.x+30,this.y-1),vertex(this.x,this.y-1),vertex(this.x,this.y+this.height-2),vertex(this.x+30,this.y+this.height-2),endShape()}}